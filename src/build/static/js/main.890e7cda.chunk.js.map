{"version":3,"sources":["Components/Navbar.js","Components/FilterData.js","Card/Card.js","Components/LaunchFilter.js","Components/LandFilter.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","FilterData","props","value","data","style","margin","onClick","handleClick","Card","datas","useState","landSuccess","setlandSuccess","missionName","mission_name","missionId","mission_id","url","links","mission_patch_small","launchYear","launch_year","launchSuccess","launch_success","useEffect","rocket","first_stage","cores","land_success","src","alt","toString","LaunchFilter","LandFilter","App","spacexData","setSpacexData","loading","setLoading","Hidecard","setHidecard","yearCard","setYear","showYearCard","setYearCard","launchCard","setLaunch","showLaunchCard","setLaunchCard","landCard","setLand","showLandCard","setLandCard","err","seterr","fetch","then","res","json","result","hide","handleClickYearFilter","event","target","length","error","alert","handleLaunchData","isSuccessLaunch","handleLandData","isLandSuccessful","Fragment","id","textAlign","map","year","values","i","key","Boolean","window","location","hostname","match","ReactDOM","hydrate","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.890e7cda.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <span className=\"navbar-brand mb-0 h1\"><b>SpaceX Launch Programs</b></span>\r\n            <span><h5>Developer : Jagpreet</h5></span>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","\r\nimport React from 'react';\r\n\r\nfunction FilterData(props) {\r\n\r\n    return (\r\n        <button className=\"btn btn-outline-success mr-2 btn-sm\" value={props.data} style={{ margin: \"5px\" }} onClick={props.handleClick}> {props.data}</button>\r\n\r\n    );\r\n}\r\n\r\nexport default FilterData;","import React, { useEffect, useState } from 'react';\r\nimport './Style.css';\r\n\r\nexport function Card({ datas }) {\r\n    const [landSuccess, setlandSuccess] = useState('')\r\n\r\n    const data = {\r\n        missionName: datas ? datas ? datas.mission_name : null : null,\r\n        missionId: datas ? datas ? datas.mission_id : null : null,\r\n        url: datas ? datas ? datas.links ? datas.links.mission_patch_small : null : null : null,\r\n        launchYear: datas ? datas ? datas.launch_year : null : null,\r\n        launchSuccess: datas ? datas ? datas.launch_success : null : null,\r\n    }\r\n    useEffect(() => {\r\n\r\n        setlandSuccess(datas ? datas ? datas.rocket ? datas.rocket.first_stage.cores[0].land_success : null : null : null\r\n        )\r\n\r\n    }, [datas ? datas ? datas.rocket ? datas.rocket.first_stage.cores[0].land_success : null : null : null])\r\n\r\n\r\n    return (\r\n        <div className=\"Card\">\r\n            <div className=\"Card__img\">\r\n                <img src={data.url} alt=\"\" />\r\n            </div>\r\n            <div className=\"Card__name\">\r\n                {data.missionName}\r\n            </div>\r\n            <div className=\"Card__types\">\r\n                <p className=\"title\"><b>Mission Id : </b></p>\r\n                <p>{data.missionId}</p>\r\n\r\n            </div>\r\n            <div className=\"Card__info\">\r\n                <div className=\"Card__datas Card__datas--weight\">\r\n                    <p className=\"title\">Launch Year :{data.launchYear}</p>\r\n                </div>\r\n                <div className=\"Card__datas Card__datas--weight\">\r\n                    <p className=\"title\">Launch Success : {data.launchSuccess.toString()}</p>\r\n\r\n                </div>\r\n                <div className=\"Card__datas Card__datas--ability\">\r\n                    <p className=\"title\">Land Success : {landSuccess ? landSuccess.toString() : \"false\"}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nfunction LaunchFilter(props) {\r\n    return (\r\n        <>\r\n            <button className=\"btn btn-outline-success mr-4 btn-sm\" value={props.data} style={{ margin: \"5px\" }} onClick={props.handleClick}>{props.data}</button>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default LaunchFilter","import React from 'react'\r\n\r\nfunction LandFilter(props) {\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn btn-outline-success mr-4 btn-sm\" style={{ margin: \"5px\" }} value={props.data} onClick={props.handleClick}>{props.data}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandFilter\r\n","import React, { useEffect, useState } from 'react';\nimport Navbar from './Components/Navbar';\nimport FilterData from \"./Components/FilterData\"\nimport Card from './Card/Card'\nimport LaunchFilter from './Components/LaunchFilter'\nimport LandFilter from './Components/LandFilter';\nimport './App.css'\nfunction App() {\n\n  const yearDetail = ['2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'];\n  const launchDetail = [\"true\", \"false\"]\n  const landDetail = [\"true\", \"false\"]\n  const onLoadUrl = 'https://api.spaceXdata.com/v3/launches?limit=8'\n  const [spacexData, setSpacexData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [Hidecard, setHidecard] = useState(false)\n  const [yearCard, setYear] = useState([])\n  const [showYearCard, setYearCard] = useState(false)\n  const [launchCard, setLaunch] = useState([])\n  const [showLaunchCard, setLaunchCard] = useState(false)\n  const [landCard, setLand] = useState([])\n  const [showLandCard, setLandCard] = useState(false)\n  const [err, seterr] = useState(false)\n\n  useEffect(() => {\n    fetch(onLoadUrl)\n      .then(res => res.json())\n      .then(\n        result =>\n          setSpacexData(\n            result\n          ),\n        setLoading(false)\n\n      )\n  }, [])\n\n  const hide = () => {\n    setHidecard(true)\n\n  }\n  const handleClickYearFilter = (event) => {\n    const launchYear = event.target.value\n    setLoading(true)\n    fetch(\"https://api.spacexdata.com/v3/launches?limit=8&launch_success=true&land_success=true&launch_year=\" + launchYear)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result.length > 0) {\n            setYear(result)\n            setYearCard(true)\n            setLaunchCard(false)\n            setLandCard(false)\n            setLoading(false)\n\n          }\n          else {\n            seterr(true)\n            setLaunchCard(false)\n            setLandCard(false)\n            setLoading(false)\n          }\n\n          hide();\n        },\n        (error) => {\n          alert(\"Unable to fetch Data...\")\n        }\n      )\n  }\n  const handleLaunchData = (event) => {\n    setLoading(true)\n    let isSuccessLaunch = event.target.value\n    fetch(\"https://api.spaceXdata.com/v3/launches?limit=8&launch_success=\" + isSuccessLaunch)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result.length > 0) {\n            setLoading(false)\n            setLaunch(result)\n            setLaunchCard(true)\n            setYearCard(false)\n            setLandCard(false)\n          }\n          else {\n            seterr(true)\n            setYearCard(false)\n            setLandCard(false)\n            setLoading(false)\n          }\n\n          hide();\n\n        },\n        (error) => {\n          alert(\"Unable to fetch Data...\")\n        }\n      )\n  }\n  const handleLandData = (event) => {\n    setLoading(true)\n    let isLandSuccessful = event.target.value\n    fetch(\"https://api.spaceXdata.com/v3/launches?limit=8&launch_success=true&land_success=\" + isLandSuccessful)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result.length > 0) {\n            setLand(result)\n            setLandCard(true)\n            setLoading(false)\n            setYearCard(false)\n            setLaunchCard(false)\n\n          }\n          else {\n            seterr(true)\n            setYearCard(false)\n            setLaunchCard(false)\n            setLoading(false)\n          }\n          hide();\n\n        },\n        (error) => {\n          alert(\"Unable to fetch Data...\")\n        }\n      )\n  }\n\n  return (\n    <React.Fragment>\n\n      <Navbar id='navbar' />\n\n      {loading ? <h1 style={{ textAlign: 'center' }}>Loading...</h1> : (\n\n        <>\n          <div className=\"col-md-2\" >\n            <div className=\"card mb-2 shadow-sm\">\n              <div className=\"card-body\">\n                <h3>Filters</h3>\n                <hr />\n                <span className=\"p-6\" >Launch Year</span>\n                <hr />\n\n                {yearDetail.map(year => (\n\n                  <FilterData id='FilterData' data={year} hide={hide} handleClick={handleClickYearFilter} />\n\n                ))}\n                <hr />\n                <span className=\"p-6\" >Successful Launch</span>\n                <hr />\n                {launchDetail.map(values => (\n                  <LaunchFilter id='LaunchFilter' data={values} hide={hide} handleClick={handleLaunchData} />\n                ))}\n                <hr />\n                <span className=\"p-6\" >Successful Landing</span>\n                <hr />\n                {landDetail.map(values => (\n\n                  <LandFilter id='LandFilter' data={values} hide={hide} handleClick={handleLandData} />\n                ))}\n                <hr />\n\n              </div>\n\n            </div>\n\n          </div >\n          <div className=\"grid-container\">\n            {!Hidecard ? spacexData.map((data, i) => {\n              return <Card key={i} datas={data} />\n            }) : null}\n\n            {showYearCard ? yearCard.map((data, i) => {\n              return <Card key={i} datas={data} />\n            }) : err ? <h1><center>No data found.....</center></h1> : null}\n\n            {showLaunchCard ? launchCard.map((data, i) => {\n              return <Card key={i} datas={data} />\n            }) : null}\n\n            {showLandCard ? landCard.map((data, i) => {\n              return <Card key={i} datas={data} />\n            }) : null}\n          </div>\n\n        </>\n      )}\n\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.hydrate(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}